//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.488
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SimpleDictClient.DictServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WordLookupReq", Namespace="http://schemas.datacontract.org/2004/07/SimpleDictService")]
    [System.SerializableAttribute()]
    public partial class WordLookupReq : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Word {
            get {
                return this.WordField;
            }
            set {
                if ((object.ReferenceEquals(this.WordField, value) != true)) {
                    this.WordField = value;
                    this.RaisePropertyChanged("Word");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WordLookupResp", Namespace="http://schemas.datacontract.org/2004/07/SimpleDictService")]
    [System.SerializableAttribute()]
    public partial class WordLookupResp : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefinitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExistsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Definition {
            get {
                return this.DefinitionField;
            }
            set {
                if ((object.ReferenceEquals(this.DefinitionField, value) != true)) {
                    this.DefinitionField = value;
                    this.RaisePropertyChanged("Definition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Exists {
            get {
                return this.ExistsField;
            }
            set {
                if ((this.ExistsField.Equals(value) != true)) {
                    this.ExistsField = value;
                    this.RaisePropertyChanged("Exists");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DictServiceReference.ITheServiceContract")]
    public interface ITheServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITheServiceContract/WordLookup", ReplyAction="http://tempuri.org/ITheServiceContract/WordLookupResponse")]
        SimpleDictClient.DictServiceReference.WordLookupResp WordLookup(SimpleDictClient.DictServiceReference.WordLookupReq Request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITheServiceContractChannel : SimpleDictClient.DictServiceReference.ITheServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TheServiceContractClient : System.ServiceModel.ClientBase<SimpleDictClient.DictServiceReference.ITheServiceContract>, SimpleDictClient.DictServiceReference.ITheServiceContract {
        
        public TheServiceContractClient() {
        }
        
        public TheServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TheServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TheServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TheServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SimpleDictClient.DictServiceReference.WordLookupResp WordLookup(SimpleDictClient.DictServiceReference.WordLookupReq Request) {
            return base.Channel.WordLookup(Request);
        }
    }
}
